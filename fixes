class AppTileWidget(QFrame):
    def __init__(self, name, description, parent=None):
        super().__init__(parent)
        self.setObjectName("appTile")
        # Remove fixed height to allow dynamic sizing based on content
        self.setup_ui(name, description)
        
    def setup_ui(self, name, description):
        layout = QVBoxLayout(self)
        layout.setContentsMargins(16, 16, 16, 16)
        layout.setSpacing(8)

        # App name with icon in horizontal layout
        name_layout = QHBoxLayout()
        name_layout.setSpacing(8)
        
        # App icon/emoji (placeholder)
        icon_label = QLabel("ðŸ”¹")
        icon_label.setProperty("appIcon", True)
        icon_label.setFixedWidth(24)
        name_layout.addWidget(icon_label)
        
        name_label = QLabel(name)
        name_label.setProperty("appName", True)
        name_label.setWordWrap(True)
        name_layout.addWidget(name_label, 1)  # Add stretch factor
        
        # Description
        desc_label = QLabel(description)
        desc_label.setProperty("appDescription", True)
        desc_label.setWordWrap(True)
        desc_label.setMinimumHeight(40)  # Ensure minimum height for description
        
        layout.addLayout(name_layout)
        layout.addWidget(desc_label)

# Update the style sheet in the AccessControlDialog class:
    def apply_styles(self):
        self.setStyleSheet("""
            QDialog {
                background-color: #ffffff;
            }
            QFrame#appTile {
                background-color: white;
                border: 1px solid #e0e0e0;
                border-radius: 8px;
                margin: 4px 8px;
                min-height: 90px;
            }
            QFrame#appTile:hover {
                background-color: #f8f9fa;
                border: 1px solid #1976d2;
            }
            QLabel[appName="true"] {
                font-size: 14px;
                font-weight: bold;
                color: #1976d2;
                padding: 0px;
                margin: 0px;
            }
            QLabel[appDescription="true"] {
                font-size: 12px;
                color: #666;
                line-height: 1.4;
                padding: 0px;
                margin: 0px;
            }
            QLabel[appIcon="true"] {
                font-size: 16px;
                color: #1976d2;
                padding: 0px;
                margin: 0px;
            }
            QListWidget {
                background-color: #f5f5f5;
                border: none;
                border-radius: 0px;
                padding: 8px;
                spacing: 8px;  /* Space between items */
            }
            QListWidget::item {
                background-color: transparent;
                padding: 0px;
                margin: 0px;
            }
            QListWidget::item:selected {
                background-color: transparent;
            }
            QListWidget::item:hover {
                background-color: transparent;
            }
        """)

    def update_app_list(self):
        self.app_list.clear()
        for _, row in self.df.iterrows():
            item = QListWidgetItem(self.app_list)
            tile_widget = AppTileWidget(row['application_name'], row['description'])
            
            # Calculate proper size hint based on content
            size_hint = tile_widget.sizeHint()
            # Add extra height for padding and margins
            size_hint.setHeight(size_hint.height() + 16)
            item.setSizeHint(size_hint)
            
            self.app_list.setItemWidget(item, tile_widget)
            item.setData(Qt.ItemDataRole.UserRole, row['application_name'])

    def setup_right_panel(self):
        # In the setup_right_panel method, update the app_list configuration
        self.app_list = QListWidget()
        self.app_list.setSpacing(8)
        self.app_list.setResizeMode(QListWidget.ResizeMode.Adjust)
        self.app_list.setVerticalScrollMode(QListWidget.ScrollMode.ScrollPerPixel)  # Smooth scrolling
        self.app_list.setUniformItemSizes(False)  # Allow different size items
        self.app_list.setViewMode(QListWidget.ViewMode.ListMode)
        self.app_list.setMinimumWidth(300)
        
        # Rest of the setup_right_panel code remains the same
