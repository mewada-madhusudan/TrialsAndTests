def setup_user_management(self, users_container):
    users_layout = QVBoxLayout(users_container)
    users_layout.setContentsMargins(20, 20, 20, 20)

    # Title
    users_title = QLabel("Manage Users")
    users_title.setProperty("heading", True)
    users_layout.addWidget(users_title)

    # Tab widget
    tab_widget = QTabWidget()
    tab_widget.setStyleSheet("""
        QTabWidget::pane {
            border: 1px solid #e0e0e0;
            border-radius: 4px;
            background: white;
            padding: 10px;
        }
        QTabBar::tab {
            background: #f5f5f5;
            border: 1px solid #e0e0e0;
            padding: 8px 16px;
            margin-right: 2px;
            border-top-left-radius: 4px;
            border-top-right-radius: 4px;
        }
        QTabBar::tab:selected {
            background: white;
            border-bottom-color: white;
        }
    """)

    # Application List Setup
    self.app_list = QListWidget()
    self.app_list.setStyleSheet("""
        QListWidget {
            border: 1px solid #e0e0e0;
            border-radius: 4px;
            padding: 8px;
            background: white;
        }
        QListWidget::item {
            padding: 8px;
            border-bottom: 1px solid #f0f0f0;
        }
        QListWidget::item:selected {
            background: #e3f2fd;
            color: #1976d2;
        }
        QListWidget::item:focus {
            background: #e3f2fd;
            color: #1976d2;
            border: none;
            outline: none;
        }
    """)
    
    # Keep track of the current selection
    self.current_app_item = None
    
    # Modified click handler
    def handle_app_selection(item):
        if item != self.current_app_item:
            self.current_app_item = item
            self.show_application_users(item)
    
    self.app_list.itemClicked.connect(handle_app_selection)
    
    # Override focus out event to prevent deselection
    def focus_out_event(event):
        if self.current_app_item:
            self.app_list.setCurrentItem(self.current_app_item)
        super(QListWidget, self.app_list).focusOutEvent(event)
    
    self.app_list.focusOutEvent = focus_out_event

    # Rest of the existing setup code...
    [Previous code continues unchanged...]

def show_application_users(self, item):
    if not item:
        return
        
    app_name = item.data(Qt.ItemDataRole.UserRole)
    app_idx = self.df[self.df['application_name'] == app_name].index[0]
    
    # Clear and populate the existing users list
    self.existing_users_list.clear()
    sids = self.df.at[app_idx, 'sids'].split(',')
    self.existing_users_list.addItems(sids)
    
    # Ensure the item stays selected
    self.app_list.setCurrentItem(item)
    self.current_app_item = item
