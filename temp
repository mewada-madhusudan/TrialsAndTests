# [Previous imports and MainWindow class remain the same...]

class AccessControlDialog(QDialog):
    # [Previous __init__ and other methods remain the same until setup_sto_panel...]

    def setup_sto_panel(self):
        sto_widget = QFrame()
        layout = QVBoxLayout(sto_widget)
        layout.setSpacing(20)
        
        # Title with enhanced styling
        title = QLabel("STO Table Management")
        title.setProperty("heading", True)
        layout.addWidget(title)
        
        # Table selection with modern styling
        table_select_frame = QFrame()
        table_select_frame.setStyleSheet("""
            QFrame {
                background-color: white;
                border-radius: 8px;
                padding: 15px;
            }
            QComboBox {
                border: 2px solid #e0e0e0;
                border-radius: 6px;
                padding: 8px 15px;
                min-width: 200px;
                background-color: white;
                font-size: 14px;
            }
            QComboBox:focus {
                border-color: #4a90e2;
            }
            QComboBox::drop-down {
                border: none;
                padding-right: 20px;
            }
            QComboBox::down-arrow {
                image: none;
                border-left: 5px solid transparent;
                border-right: 5px solid transparent;
                border-top: 5px solid #666;
                margin-right: 10px;
            }
        """)
        
        table_select_layout = QHBoxLayout(table_select_frame)
        table_select_layout.setContentsMargins(15, 10, 15, 10)
        
        table_label = QLabel("Select Table:")
        table_label.setStyleSheet("""
            QLabel {
                font-size: 14px;
                font-weight: bold;
                color: #2c3e50;
            }
        """)
        
        self.table_combo = QComboBox()
        self.table_combo.addItems(["Status Table", "Field Table"])
        self.table_combo.currentTextChanged.connect(self.show_selected_table)
        
        table_select_layout.addWidget(table_label)
        table_select_layout.addWidget(self.table_combo)
        table_select_layout.addStretch()
        
        layout.addWidget(table_select_frame)
        
        # Table container with shadow effect
        table_container = QFrame()
        table_container.setStyleSheet("""
            QFrame {
                background-color: white;
                border-radius: 8px;
                padding: 15px;
            }
        """)
        table_container_layout = QVBoxLayout(table_container)
        
        # Enhanced table styling
        self.table_widget = QTableWidget()
        self.table_widget.setStyleSheet("""
            QTableWidget {
                border: none;
                background-color: white;
                gridline-color: #f0f0f0;
            }
            QTableWidget::item {
                padding: 10px;
                border-bottom: 1px solid #f0f0f0;
            }
            QTableWidget::item:selected {
                background-color: #e3f2fd;
                color: #2c3e50;
            }
            QHeaderView::section {
                background-color: #f8f9fa;
                padding: 12px;
                border: none;
                border-bottom: 2px solid #e0e0e0;
                font-weight: bold;
                color: #2c3e50;
                font-size: 13px;
            }
            QTableWidget::item:hover {
                background-color: #f8f9fa;
            }
            QScrollBar:vertical {
                border: none;
                background: #f0f0f0;
                width: 10px;
                margin: 0px;
            }
            QScrollBar::handle:vertical {
                background: #c0c0c0;
                border-radius: 5px;
                min-height: 20px;
            }
            QScrollBar::handle:vertical:hover {
                background: #a0a0a0;
            }
            QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
                height: 0px;
            }
        """)
        
        table_container_layout.addWidget(self.table_widget)
        layout.addWidget(table_container)
        
        # Action buttons with modern styling
        buttons_frame = QFrame()
        buttons_frame.setStyleSheet("""
            QFrame {
                background-color: white;
                border-radius: 8px;
                padding: 15px;
            }
            QPushButton {
                min-width: 120px;
                padding: 10px 20px;
            }
            QPushButton#addBtn {
                background-color: #4caf50;
            }
            QPushButton#addBtn:hover {
                background-color: #43a047;
            }
            QPushButton#deleteBtn {
                background-color: #f44336;
            }
            QPushButton#deleteBtn:hover {
                background-color: #e53935;
            }
            QPushButton#saveBtn {
                background-color: #2196f3;
            }
            QPushButton#saveBtn:hover {
                background-color: #1e88e5;
            }
        """)
        
        buttons_layout = QHBoxLayout(buttons_frame)
        buttons_layout.setSpacing(15)
        
        add_row_btn = QPushButton("Add Row")
        add_row_btn.setObjectName("addBtn")
        add_row_btn.setIcon(QIcon.fromTheme("list-add"))
        
        delete_row_btn = QPushButton("Delete Selected")
        delete_row_btn.setObjectName("deleteBtn")
        delete_row_btn.setIcon(QIcon.fromTheme("edit-delete"))
        
        save_changes_btn = QPushButton("Save Changes")
        save_changes_btn.setObjectName("saveBtn")
        save_changes_btn.setIcon(QIcon.fromTheme("document-save"))
        
        add_row_btn.clicked.connect(self.add_table_row)
        delete_row_btn.clicked.connect(self.delete_table_row)
        save_changes_btn.clicked.connect(self.save_table_changes)
        
        buttons_layout.addWidget(add_row_btn)
        buttons_layout.addWidget(delete_row_btn)
        buttons_layout.addWidget(save_changes_btn)
        buttons_layout.addStretch()
        
        layout.addWidget(buttons_frame)
        
        self.right_stack.addWidget(sto_widget)
        self.show_selected_table("Status Table")

    def show_selected_table(self, table_name):
        if table_name == "Status Table":
            df = self.status_table
        else:  # Field Table
            df = self.field_table
        
        # Set up table widget
        self.table_widget.setRowCount(len(df))
        self.table_widget.setColumnCount(len(df.columns))
        self.table_widget.setHorizontalHeaderLabels(df.columns)
        
        # Populate table with improved formatting
        for i, row in df.iterrows():
            for j, value in enumerate(row):
                item = QTableWidgetItem(str(value))
                item.setTextAlignment(Qt.AlignmentFlag.AlignCenter)
                self.table_widget.setItem(i, j, item)
        
        # Adjust column widths and row heights
        self.table_widget.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Stretch)
        self.table_widget.verticalHeader().setDefaultSectionSize(50)
        
        # Hide vertical header (row numbers)
        self.table_widget.verticalHeader().setVisible(False)
        
        # Alternate row colors
        self.table_widget.setAlternatingRowColors(True)
        self.table_widget.setStyleSheet(self.table_widget.styleSheet() + """
            QTableWidget {
                alternate-background-color: #f8f9fa;
            }
        """)

    # [Rest of the methods remain the same...]
